<?xml version="1.0"?>
<launch>
  <!-- Arguments -->
  <!-- <arg name="scan_topic"     default="scan"/> -->
  <arg name="scan_topic"     default="/sick_safetyscanners/scan"/>
  
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  <!-- AMCL -->
  <node pkg="amcl" type="amcl" name="amcl">
    <param name="use_map_topic"             value="true"/>                  <!-- (bool, default: false): When the use_map_topic parameter is set, AMCL subscribes to this topic to retrieve the map used for laser-based localization -->
    <param name="min_particles"             value="500"/>                   <!-- (int, default: 100): Minimum allowed number of particles --> 
    <param name="max_particles"             value="3000"/>                  <!-- (int, default: 5000): Maximum allowed number of particles.  -->
    <param name="kld_err"                   value="0.02"/>                  <!-- (double, default: 0.01): Maximum error between the true distribution and the estimated distribution-->
    <param name="update_min_d"              value="0.20"/>                  <!-- (double, default: 0.2 meters): Translational movement required before performing a filter update -->
    <param name="update_min_a"              value="0.20"/>                  <!-- (double, default: Ï€/6.0 radians): Rotational movement required before performing a filter update -->
    <param name="resample_interval"         value="1"/>                     <!-- (int, default: 2): Number of filter updates required before resampling  -->
    <param name="transform_tolerance"       value="0.5"/>                   <!-- (double, default: 0.1 seconds): Time with which to post-date the transform that is published, to indicate that this transform is valid into the future -->
    <param name="recovery_alpha_slow"       value="0.00"/>                  <!-- (double, default: 0.0 (disabled)): Exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.001  -->
    <param name="recovery_alpha_fast"       value="0.00"/>                  <!-- (double, default: 0.0 (disabled)): Exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.1 -->
    <param name="initial_pose_x"            value="$(arg initial_pose_x)"/> <!-- (double, default: 0.0 meters): Initial pose mean (x), used to initialize filter with Gaussian distribution -->
    <param name="initial_pose_y"            value="$(arg initial_pose_y)"/> <!-- (double, default: 0.0 meters): Initial pose mean (y), used to initialize filter with Gaussian distribution -->
    <param name="initial_pose_a"            value="$(arg initial_pose_a)"/> <!-- (double, default: 0.0 radians): Initial pose mean (yaw), used to initialize filter with Gaussian distribution -->
    <param name="gui_publish_rate"          value="50.0"/>                  <!-- (double, default: -1.0 Hz): Maximum rate(Hz) at which scans and paths are published for visualization, -1.0 to disable -->

    <remap from="scan"                      to="$(arg scan_topic)"/>        <!-- Scan topic (default: base_scan) -->
    <param name="laser_max_range"           value="3.5"/>                   <!-- (double, default: -1.0): Maximum scan range to be considered; -1.0 will cause the laser's reported maximum range to be used. -->
    <param name="laser_max_beams"           value="180"/>                   <!-- (int, default: 30): How many evenly-spaced beams in each scan to be used when updating the filter -->
    <param name="laser_z_hit"               value="0.5"/>                   <!-- (double, default: 0.95): Mixture weight for the z_hit part of the model -->
    <param name="laser_z_short"             value="0.05"/>                  <!-- (double, default: 0.1): Mixture weight for the z_short part of the model.  -->
    <param name="laser_z_max"               value="0.05"/>                  <!-- (double, default: 0.05): Mixture weight for the z_max part of the model -->
    <param name="laser_z_rand"              value="0.5"/>                   <!-- (double, default: 0.05): Mixture weight for the z_rand part of the model -->
    <param name="laser_sigma_hit"           value="0.2"/>                   <!-- (double, default: 0.2 meters): Standard deviation for Gaussian model used in z_hit part of the model -->
    <param name="laser_lambda_short"        value="0.1"/>                   <!-- (double, default: 0.1): Exponential decay parameter for z_short part of model  -->
    <param name="laser_likelihood_max_dist" value="2.0"/>                   <!-- (double, default: 2.0 meters): Maximum distance to do obstacle inflation on map, for use in likelihood_field model  -->
    <param name="laser_model_type"          value="likelihood_field"/>      <!-- (string, default: "likelihood_field"): Which model to use, either beam, likelihood_field, or likelihood_field_prob (same as likelihood_field but incorporates the beamskip feature, if enabled) -->

    <param name="odom_model_type"           value="diff"/>                  <!-- (string, default: "diff"): Which model to use, either "diff", "omni", "diff-corrected" or "omni-corrected" -->
    <param name="odom_alpha1"               value="0.1"/>                   <!-- (double, default: 0.2): Specifies the expected noise in odometry's rotation estimate from the rotational component of the robot's motion -->
    <param name="odom_alpha2"               value="0.1"/>                   <!-- (double, default: 0.2): Specifies the expected noise in odometry's rotation estimate from translational component of the robot's motion -->
    <param name="odom_alpha3"               value="0.1"/>                   <!-- (double, default: 0.2): Specifies the expected noise in odometry's translation estimate from the translational component of the robot's motion -->
    <param name="odom_alpha4"               value="0.1"/>                   <!-- (double, default: 0.2): Specifies the expected noise in odometry's translation estimate from the rotational component of the robot's motion -->
    <param name="odom_frame_id"             value="odom"/>                  <!-- (string, default: "odom"): Which frame to use for odometry -->
    <param name="base_frame_id"             value="base_footprint"/>        <!-- (string, default: "base_link"): Which frame to use for the robot base -->
    <param name="global_frame_id"           value="map"/>                   <!-- (string, default: "map"): The name of the coordinate frame published by the localization system -->

  </node>
</launch>
